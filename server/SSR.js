import fs from 'fs';
import { resolve } from 'path';
import React from 'react';
import { ConnectedRouter } from 'react-router-redux';
import { renderToString } from 'react-dom/server';
import { Provider } from 'react-redux';
import { ServerStyleSheet } from 'styled-components';
import createHistory from 'history/createMemoryHistory';


// Import all components
import App from 'containers/App';
import configureStore from 'configureStore';
import initialState from 'initialState';


/**
 * Retrieve the template generated by production webpack build,
 * inject rendered components and relevant CSS,
 * and return fully rendered HTML that is ready for browser
 *
 * @param  {string} html
 * @param  {string} criticalCSS
 * @return {string}
 */
function renderFullPage(html, criticalCSS, preloadedState) { // eslint-disable-line no-unused-vars
    const page = fs.readFileSync(resolve(process.cwd() + '/server/templates/index.html'));

    return eval('`' + page + '`'); // eslint-disable-line no-eval
}

export default (data) => {
    const sheet = new ServerStyleSheet();

    // Create redux store with history
    const HISTORY = createHistory();
    const STORE = configureStore({ ...initialState, ...data }, HISTORY, true);
    const HTML = renderToString(sheet.collectStyles(
        <Provider store={STORE}>
            <ConnectedRouter history={HISTORY}>
                <App />
            </ConnectedRouter>
        </Provider>
    ));

    return renderFullPage(
        HTML,
        sheet.getStyleTags(),
        'window.__MMDB_PRELOADED_STATE=' + JSON.stringify(STORE.getState())
    );
};
